version: '3.7'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "443:443"
      - "80:80"

    depends_on:
      - application

    environment:
      - TZ=Asia/Seoul

    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      # certbot 컨테이너와 폴더 공유를 위해 볼륨 추가
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

    # https://velog.io/@zero-black/Docker-compose-certbot-nginx-%EB%A1%9C-SSL-%EC%9D%B8%EC%A6%9D%EC%84%9C-%EB%B0%9C%EA%B8%89%ED%95%98%EA%B8%B0
    command:
      - "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot

    image: certbot:arm32v6-latest

    restart: unless-stopped

    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

    entrypoint:
      - "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  application:
    container_name: artfolio

    build:
      context: .
      dockerfile: Dockerfile

    expose:
      - 8080

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/artfolio
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1111
      TZ: "Asia/Seoul"

    links:
      - redis6379
      - db

  db:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: artfolio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111

    expose:
      - 5432

    volumes:
      - ~/Desktop/postgres/5432/data:/var/lib/postgresql/data

  redis6379:
    container_name: redis6379
    hostname: redis6379
    image: redis:latest

    expose:
      - 6379

    volumes:
      - ~/Desktop/redis/6379/data:/var/lib/redis/data